
stages:
  - tests
  - dockerize

variables:
  TARGETOS:
    value: "linux"
    options:
      - "linux"
      - "macos"
    description: "Pick OS"
  TARGETARCH:
    value: "amd64"
    options:
      - "amd64"
      - "arm64"
    description: "Pick ARCH"
  GITHUB_PROJECT: "https://github.com/vlarkin/chatbot"
  DOCKER_REGISTRY: "ghcr.io/vlarkin"
  APP: "chatbot"

tests-job:
  image: golang:latest
  stage: tests
  script:
    - echo "Run tests ..."
    - make tests

docker-job:
  image: docker:latest
  services:
    - docker:dind
  stage: dockerize
  before_script:
    - echo ${GITHUB_TOKEN} | docker login ${DOCKER_REGISTRY} -u ${REGISTRY_USER} --password-stdin
  script:
    - echo "Build and push a docker image"
    - VERSION=${CI_COMMIT_TAG}-$(git rev-parse --short HEAD)
    - IMAGE=${DOCKER_REGISTRY}/${APP}:${VERSION}
    - docker build --platform linux/${TARGETARCH} -t ${IMAGE}-linux-${TARGETARCH} .
    - docker push ${IMAGE}-linux-${TARGETARCH}
  after_script:
    - docker system prune -a --volumes --force
  needs:
    - tests-job
  only:
    - tags

